TARGET = impossible

CC  := clang
CXX := clang++

INCLUDE = 

all: CFLAGS = $(INCLUDE) -std=c++14 -stdlib=libc++ -Wno-deprecated-register -Iparser -I.
opt: CFLAGS = $(INCLUDE) -O3 -ffast-math -pipe -std=c++14 -stdlib=libc++ -Wno-deprecated-register -Iparser -I. -I/usr/local/opt/flex/include/

CXXFLAGS = $(CFLAGS)

LDFLAGS = 

# Find all source files
BUILD_DIR = objects

SOURCE = .
SRC_CPP = $(foreach dir, $(SOURCE), $(wildcard $(dir)/*.cpp)) ./parser/parser.cpp ./parser/lexer.cpp ./parser/compiler.cpp
OBJ_CPP = $(patsubst %.cpp, %.o, $(SRC_CPP))
OBJS    = $(addprefix $(BUILD_DIR)/, $(subst /,-,$(subst ./,,$(OBJ_CPP))))


$(info $$var is [$(subst /,_, parser/parser.cpp)])

$(info obj_cpp is [${OBJ_CPP}])
$(info objs is [${OBJS}])


.PHONY: all clean opt $(BUILD_DIR)

all opt: $(TARGET)

$(BUILD_DIR) :
	mkdir -p $@

parser/lexer.cpp: parser/impossible.l parser/parser.cpp
	/usr/local/opt/flex/bin/flex -c++ --outfile=parser/lexer.cpp $<

parser/parser.cpp: parser/impossible.ypp parser/parser.cpp
	/usr/local/opt/bison/bin/bison -d -v --output-file=parser/parser.cpp $<

$(TARGET) : $(OBJS)
	$(CXX) $(CXXFLAGS) $^ -o $@ $(LDFLAGS)

$(BUILD_DIR)/parser-compiler.o: parser/compiler.cpp parser/parser.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@
	
$(BUILD_DIR)/parser-%.o: parser/%.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@
	
$(BUILD_DIR)/%.o: $(subst -,/,%.cpp) $(BUILD_DIR) parser/parser.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

clean:
	rm -f $(BUILD_DIR)/*.o $(TARGET) parser/location.hh parser/stack.hh parser/position.hh parser/parser.output parser/lexer.cpp parser/parser.cpp parser/parser.hpp