Terminals unused in grammar

   "\n"
   "$"
   "%"
   ";"
   ","
   "(>"
   "<)"
   "+"
   "-"
   "/"
   "*"
   "//"
   "&"
   "|"
   "~"
   ">>"
   "<<"
   "_"
   "+."
   "+:"
   "-."
   "-:"
   "*."
   "*:"
   "/."
   "/:"
   "@>"
   "#>"
   "$>"
   "@"
   "#"
   "<@"
   ">@"
   "<#"
   ">#"
   ".>."
   ":>."
   ":>:"
   ".>"
   ".>:"
   ":*."
   ".?"
   ":?"
   "="
   "!"
   "!!"
   "??"
   "^"
   "[#]"
   "{#}"
   "<>"
   "s"
   "lambda"
   "larray"
   "optional_value"


Grammar

    0 $accept: start "end of file"

    1 start: instructions

    2 instructions: %empty
    3             | instructions instruction

    4 instruction: value
    5            | OPCODE

    6 values: value
    7       | values value

    8 value_pairs: value ":" value
    9            | value_pairs value ":" value

   10 lazy_pairs: %empty
   11           | lazy_pairs "integer" ":" lambda

   12 lazy_array: "(" "?" lazy_pairs lambda ")"
   13           | "(" "?" "i" lazy_pairs lambda ")"

   14 opt_value: %empty
   15          | value

   16 value: "integer"
   17      | "float"
   18      | "bool"
   19      | "char"
   20      | "string"
   21      | "range"
   22      | "{" values "}"
   23      | "{" "}"
   24      | "{" ">" values "}"
   25      | "{" ">" "}"
   26      | "{" "<" values "}"
   27      | "{" "<" "}"
   28      | "{" "." values "}"
   29      | "{" "." "}"
   30      | "{" value_pairs "}"
   31      | "{" ":" "}"
   32      | "(" values ")"
   33      | "(" ":" "integer" opt_value ")"
   34      | "(" ")"
   35      | lazy_array
   36      | lambda

   37 lambda: "[" instructions "]"


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"\n" (258)
"(" (259) 12 13 32 33 34
")" (260) 12 13 32 33 34
"{" (261) 22 23 24 25 26 27 28 29 30 31
"}" (262) 22 23 24 25 26 27 28 29 30 31
"[" (263) 37
"]" (264) 37
":" (265) 8 9 11 31 33
"$" (266)
"%" (267)
";" (268)
"," (269)
"(>" (270)
"<)" (271)
"+" (272)
"-" (273)
"/" (274)
"*" (275)
"//" (276)
"&" (277)
"|" (278)
"~" (279)
">>" (280)
"<<" (281)
"_" (282)
"+." (283)
"+:" (284)
"-." (285)
"-:" (286)
"*." (287)
"*:" (288)
"/." (289)
"/:" (290)
"@>" (291)
"#>" (292)
"$>" (293)
"@" (294)
"#" (295)
"<@" (296)
">@" (297)
"<#" (298)
">#" (299)
".>." (300)
":>." (301)
":>:" (302)
".>" (303)
".>:" (304)
":*." (305)
".?" (306)
":?" (307)
"=" (308)
"<" (309) 26 27
">" (310) 24 25
"." (311) 28 29
"!" (312)
"!!" (313)
"?" (314) 12 13
"??" (315)
"^" (316)
"[#]" (317)
"{#}" (318)
"<>" (319)
"i" (320) 13
"s" (321)
OPCODE (322) 5
"integer" (323) 11 16 33
"float" (324) 17
"bool" (325) 18
"char" (326) 19
"string" (327) 20
"range" (328) 21
"lambda" (329)
"larray" (330)
"optional_value" (331)


Nonterminals, with rules where they appear

$accept (77)
    on left: 0
start (78)
    on left: 1, on right: 0
instructions (79)
    on left: 2 3, on right: 1 3 37
instruction (80)
    on left: 4 5, on right: 3
values (81)
    on left: 6 7, on right: 7 22 24 26 28 32
value_pairs (82)
    on left: 8 9, on right: 9 30
lazy_pairs (83)
    on left: 10 11, on right: 11 12 13
lazy_array (84)
    on left: 12 13, on right: 35
opt_value (85)
    on left: 14 15, on right: 33
value (86)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    34 35 36, on right: 4 6 7 8 9 15
lambda (87)
    on left: 37, on right: 11 12 13 36


State 0

    0 $accept: . start "end of file"

    $default  reduce using rule 2 (instructions)

    start         go to state 1
    instructions  go to state 2


State 1

    0 $accept: start . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 start: instructions .
    3 instructions: instructions . instruction

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "["        shift, and go to state 6
    OPCODE     shift, and go to state 7
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    $default  reduce using rule 1 (start)

    instruction  go to state 14
    lazy_array   go to state 15
    value        go to state 16
    lambda       go to state 17


State 3

    0 $accept: start "end of file" .

    $default  accept


State 4

   12 lazy_array: "(" . "?" lazy_pairs lambda ")"
   13           | "(" . "?" "i" lazy_pairs lambda ")"
   32 value: "(" . values ")"
   33      | "(" . ":" "integer" opt_value ")"
   34      | "(" . ")"

    "("        shift, and go to state 4
    ")"        shift, and go to state 18
    "{"        shift, and go to state 5
    "["        shift, and go to state 6
    ":"        shift, and go to state 19
    "?"        shift, and go to state 20
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    values      go to state 21
    lazy_array  go to state 15
    value       go to state 22
    lambda      go to state 17


State 5

   22 value: "{" . values "}"
   23      | "{" . "}"
   24      | "{" . ">" values "}"
   25      | "{" . ">" "}"
   26      | "{" . "<" values "}"
   27      | "{" . "<" "}"
   28      | "{" . "." values "}"
   29      | "{" . "." "}"
   30      | "{" . value_pairs "}"
   31      | "{" . ":" "}"

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "}"        shift, and go to state 23
    "["        shift, and go to state 6
    ":"        shift, and go to state 24
    "<"        shift, and go to state 25
    ">"        shift, and go to state 26
    "."        shift, and go to state 27
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    values       go to state 28
    value_pairs  go to state 29
    lazy_array   go to state 15
    value        go to state 30
    lambda       go to state 17


State 6

   37 lambda: "[" . instructions "]"

    $default  reduce using rule 2 (instructions)

    instructions  go to state 31


State 7

    5 instruction: OPCODE .

    $default  reduce using rule 5 (instruction)


State 8

   16 value: "integer" .

    $default  reduce using rule 16 (value)


State 9

   17 value: "float" .

    $default  reduce using rule 17 (value)


State 10

   18 value: "bool" .

    $default  reduce using rule 18 (value)


State 11

   19 value: "char" .

    $default  reduce using rule 19 (value)


State 12

   20 value: "string" .

    $default  reduce using rule 20 (value)


State 13

   21 value: "range" .

    $default  reduce using rule 21 (value)


State 14

    3 instructions: instructions instruction .

    $default  reduce using rule 3 (instructions)


State 15

   35 value: lazy_array .

    $default  reduce using rule 35 (value)


State 16

    4 instruction: value .

    $default  reduce using rule 4 (instruction)


State 17

   36 value: lambda .

    $default  reduce using rule 36 (value)


State 18

   34 value: "(" ")" .

    $default  reduce using rule 34 (value)


State 19

   33 value: "(" ":" . "integer" opt_value ")"

    "integer"  shift, and go to state 32


State 20

   12 lazy_array: "(" "?" . lazy_pairs lambda ")"
   13           | "(" "?" . "i" lazy_pairs lambda ")"

    "i"  shift, and go to state 33

    $default  reduce using rule 10 (lazy_pairs)

    lazy_pairs  go to state 34


State 21

    7 values: values . value
   32 value: "(" values . ")"

    "("        shift, and go to state 4
    ")"        shift, and go to state 35
    "{"        shift, and go to state 5
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    lazy_array  go to state 15
    value       go to state 36
    lambda      go to state 17


State 22

    6 values: value .

    $default  reduce using rule 6 (values)


State 23

   23 value: "{" "}" .

    $default  reduce using rule 23 (value)


State 24

   31 value: "{" ":" . "}"

    "}"  shift, and go to state 37


State 25

   26 value: "{" "<" . values "}"
   27      | "{" "<" . "}"

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "}"        shift, and go to state 38
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    values      go to state 39
    lazy_array  go to state 15
    value       go to state 22
    lambda      go to state 17


State 26

   24 value: "{" ">" . values "}"
   25      | "{" ">" . "}"

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "}"        shift, and go to state 40
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    values      go to state 41
    lazy_array  go to state 15
    value       go to state 22
    lambda      go to state 17


State 27

   28 value: "{" "." . values "}"
   29      | "{" "." . "}"

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "}"        shift, and go to state 42
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    values      go to state 43
    lazy_array  go to state 15
    value       go to state 22
    lambda      go to state 17


State 28

    7 values: values . value
   22 value: "{" values . "}"

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "}"        shift, and go to state 44
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    lazy_array  go to state 15
    value       go to state 36
    lambda      go to state 17


State 29

    9 value_pairs: value_pairs . value ":" value
   30 value: "{" value_pairs . "}"

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "}"        shift, and go to state 45
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    lazy_array  go to state 15
    value       go to state 46
    lambda      go to state 17


State 30

    6 values: value .
    8 value_pairs: value . ":" value

    ":"  shift, and go to state 47

    $default  reduce using rule 6 (values)


State 31

    3 instructions: instructions . instruction
   37 lambda: "[" instructions . "]"

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "["        shift, and go to state 6
    "]"        shift, and go to state 48
    OPCODE     shift, and go to state 7
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    instruction  go to state 14
    lazy_array   go to state 15
    value        go to state 16
    lambda       go to state 17


State 32

   33 value: "(" ":" "integer" . opt_value ")"

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    $default  reduce using rule 14 (opt_value)

    lazy_array  go to state 15
    opt_value   go to state 49
    value       go to state 50
    lambda      go to state 17


State 33

   13 lazy_array: "(" "?" "i" . lazy_pairs lambda ")"

    $default  reduce using rule 10 (lazy_pairs)

    lazy_pairs  go to state 51


State 34

   11 lazy_pairs: lazy_pairs . "integer" ":" lambda
   12 lazy_array: "(" "?" lazy_pairs . lambda ")"

    "["        shift, and go to state 6
    "integer"  shift, and go to state 52

    lambda  go to state 53


State 35

   32 value: "(" values ")" .

    $default  reduce using rule 32 (value)


State 36

    7 values: values value .

    $default  reduce using rule 7 (values)


State 37

   31 value: "{" ":" "}" .

    $default  reduce using rule 31 (value)


State 38

   27 value: "{" "<" "}" .

    $default  reduce using rule 27 (value)


State 39

    7 values: values . value
   26 value: "{" "<" values . "}"

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "}"        shift, and go to state 54
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    lazy_array  go to state 15
    value       go to state 36
    lambda      go to state 17


State 40

   25 value: "{" ">" "}" .

    $default  reduce using rule 25 (value)


State 41

    7 values: values . value
   24 value: "{" ">" values . "}"

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "}"        shift, and go to state 55
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    lazy_array  go to state 15
    value       go to state 36
    lambda      go to state 17


State 42

   29 value: "{" "." "}" .

    $default  reduce using rule 29 (value)


State 43

    7 values: values . value
   28 value: "{" "." values . "}"

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "}"        shift, and go to state 56
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    lazy_array  go to state 15
    value       go to state 36
    lambda      go to state 17


State 44

   22 value: "{" values "}" .

    $default  reduce using rule 22 (value)


State 45

   30 value: "{" value_pairs "}" .

    $default  reduce using rule 30 (value)


State 46

    9 value_pairs: value_pairs value . ":" value

    ":"  shift, and go to state 57


State 47

    8 value_pairs: value ":" . value

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    lazy_array  go to state 15
    value       go to state 58
    lambda      go to state 17


State 48

   37 lambda: "[" instructions "]" .

    $default  reduce using rule 37 (lambda)


State 49

   33 value: "(" ":" "integer" opt_value . ")"

    ")"  shift, and go to state 59


State 50

   15 opt_value: value .

    $default  reduce using rule 15 (opt_value)


State 51

   11 lazy_pairs: lazy_pairs . "integer" ":" lambda
   13 lazy_array: "(" "?" "i" lazy_pairs . lambda ")"

    "["        shift, and go to state 6
    "integer"  shift, and go to state 52

    lambda  go to state 60


State 52

   11 lazy_pairs: lazy_pairs "integer" . ":" lambda

    ":"  shift, and go to state 61


State 53

   12 lazy_array: "(" "?" lazy_pairs lambda . ")"

    ")"  shift, and go to state 62


State 54

   26 value: "{" "<" values "}" .

    $default  reduce using rule 26 (value)


State 55

   24 value: "{" ">" values "}" .

    $default  reduce using rule 24 (value)


State 56

   28 value: "{" "." values "}" .

    $default  reduce using rule 28 (value)


State 57

    9 value_pairs: value_pairs value ":" . value

    "("        shift, and go to state 4
    "{"        shift, and go to state 5
    "["        shift, and go to state 6
    "integer"  shift, and go to state 8
    "float"    shift, and go to state 9
    "bool"     shift, and go to state 10
    "char"     shift, and go to state 11
    "string"   shift, and go to state 12
    "range"    shift, and go to state 13

    lazy_array  go to state 15
    value       go to state 63
    lambda      go to state 17


State 58

    8 value_pairs: value ":" value .

    $default  reduce using rule 8 (value_pairs)


State 59

   33 value: "(" ":" "integer" opt_value ")" .

    $default  reduce using rule 33 (value)


State 60

   13 lazy_array: "(" "?" "i" lazy_pairs lambda . ")"

    ")"  shift, and go to state 64


State 61

   11 lazy_pairs: lazy_pairs "integer" ":" . lambda

    "["  shift, and go to state 6

    lambda  go to state 65


State 62

   12 lazy_array: "(" "?" lazy_pairs lambda ")" .

    $default  reduce using rule 12 (lazy_array)


State 63

    9 value_pairs: value_pairs value ":" value .

    $default  reduce using rule 9 (value_pairs)


State 64

   13 lazy_array: "(" "?" "i" lazy_pairs lambda ")" .

    $default  reduce using rule 13 (lazy_array)


State 65

   11 lazy_pairs: lazy_pairs "integer" ":" lambda .

    $default  reduce using rule 11 (lazy_pairs)
